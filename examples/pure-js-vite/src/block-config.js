/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–ª–æ–∫–æ–≤ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ JS
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BlockBuilder –±–µ–∑ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤
 * ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π ES –º–æ–¥—É–ª–∏ —Å Vite
 * ‚úÖ –ù–∞—Å—Ç–æ—è—â–∏–π Swiper –∏–∑ npm
 */

import Swiper from 'swiper'
import { Navigation, Pagination, Autoplay } from 'swiper/modules'
import 'swiper/css'
import 'swiper/css/navigation'
import 'swiper/css/pagination'

export const blockConfigs = {
  spacedText: {
    title: '–¢–µ–∫—Å—Ç —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏',
    icon: 'üìê',
    description: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ—Ç—Å—Ç—É–ø–∞–º–∏',
    render: {
      kind: 'html',
      template: (props) => {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è padding (–æ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –Ω–∞ .block-builder-block)
        // margin –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫ .block-builder-block
        return `
          <div class="spaced-text-block" style="
            padding-top: var(--spacing-padding-top, 0px);
            padding-bottom: var(--spacing-padding-bottom, 0px);
            text-align: ${props.textAlign}; 
            font-size: ${props.fontSize}px; 
            color: ${props.color};
            background: ${props.backgroundColor};
            border-radius: 8px;
            transition: all 0.3s ease;
          " >
            ${props.content}
          </div>
        `
      }
    },
    fields: [
      {
        field: 'content',
        label: '–¢–µ–∫—Å—Ç',
        type: 'textarea',
        placeholder: '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç...',
        rules: [
          { type: 'required', message: '–¢–µ–∫—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }
        ],
        defaultValue: '–¢–µ–∫—Å—Ç —Å —É–ø—Ä–∞–≤–ª—è–µ–º—ã–º–∏ –æ—Ç—Å—Ç—É–ø–∞–º–∏'
      },
      {
        field: 'fontSize',
        label: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞',
        type: 'number',
        rules: [
          { type: 'min', value: 12, message: '–ú–∏–Ω–∏–º—É–º: 12px' },
          { type: 'max', value: 48, message: '–ú–∞–∫—Å–∏–º—É–º: 48px' }
        ],
        defaultValue: 18
      },
      {
        field: 'color',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        defaultValue: '#333333'
      },
      {
        field: 'backgroundColor',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞',
        type: 'color',
        defaultValue: '#f8f9fa'
      },
      {
        field: 'textAlign',
        label: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ',
        type: 'select',
        options: [
          { value: 'left', label: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'center', label: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
          { value: 'right', label: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' }
        ],
        defaultValue: 'center'
      }
    ],
    // üß™ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –±—Ä–µ–∫–ø–æ–∏–Ω—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–∞–∫ –∂–µ –∫–∞–∫ –≤–æ Vue –ø—Ä–∏–º–µ—Ä–µ)
    spacingOptions: {
      config: {
        min: 0,
        max: 120,
        step: 8,
        // –ö–∞—Å—Ç–æ–º–Ω—ã–µ –±—Ä–µ–∫–ø–æ–∏–Ω—Ç—ã (–∫–æ–≥–¥–∞ —É–∫–∞–∑–∞–Ω—ã, –∑–∞–º–µ–Ω—è—é—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ)
        breakpoints: [
          { name: 'xlarge', label: 'XL (Desktop)', maxWidth: undefined }, // Desktop –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
          { name: 'large', label: 'L (Laptop)', maxWidth: 1440 },
          { name: 'medium', label: 'M (Tablet)', maxWidth: 1024 },
          { name: 'small', label: 'S (Mobile)', maxWidth: 640 }
        ]
      }
    }
  },

  text: {
    title: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫',
    icon: 'üìù',
    description: '–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="text-block" style="
          text-align: ${props.textAlign}; 
          font-size: ${props.fontSize}px; 
          color: ${props.color};
          padding: 10px;
          border: 1px solid #e9ecef;
          border-radius: 4px;
          background: #f8f9fa;
          transition: all 0.2s ease;
        " onmouseover="this.style.boxShadow='0 2px 8px rgba(0,0,0,0.1)'" onmouseout="this.style.boxShadow='none'">
          ${props.content}
        </div>
      `
    },
    fields: [
      {
        field: 'content',
        label: '–¢–µ–∫—Å—Ç',
        type: 'textarea',
        placeholder: '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç...',
        rules: [
          { type: 'required', message: '–¢–µ–∫—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
          { type: 'minLength', value: 1, message: '–¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' }
        ],
        defaultValue: '–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞'
      },
      {
        field: 'fontSize',
        label: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞',
        type: 'number',
        rules: [
          { type: 'required', message: '–†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
          { type: 'min', value: 8, message: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 8px' },
          { type: 'max', value: 72, message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 72px' }
        ],
        defaultValue: 16
      },
      {
        field: 'color',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        rules: [{ type: 'required', message: '–¶–≤–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '#333333'
      },
      {
        field: 'textAlign',
        label: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ',
        type: 'select',
        options: [
          { value: 'left', label: '–ü–æ –ª–µ–≤–æ–º—É –∫—Ä–∞—é' },
          { value: 'center', label: '–ü–æ —Ü–µ–Ω—Ç—Ä—É' },
          { value: 'right', label: '–ü–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é' }
        ],
        rules: [{ type: 'required', message: '–í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }],
        defaultValue: 'left'
      }
    ]
  },

  image: {
    title: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    icon: 'üñºÔ∏è',
    description: '–î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="image-block" style="text-align: center; margin: 20px 0;">
          <img 
            src="${props.src}" 
            alt="${props.alt}" 
            style="
              border-radius: ${props.borderRadius}px;
              max-width: 100%;
              height: auto;
              object-fit: cover;
              box-shadow: 0 4px 8px rgba(0,0,0,0.1);
              transition: transform 0.3s ease;
            "
            onmouseover="this.style.transform='scale(1.02)'"
            onmouseout="this.style.transform='scale(1)'"
          />
        </div>
      `
    },
    fields: [
      {
        field: 'src',
        label: 'URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
        type: 'text',
        placeholder: 'https://example.com/image.jpg',
        rules: [
          { type: 'required', message: 'URL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }
        ],
        defaultValue: '/1.jpeg'
      },
      {
        field: 'alt',
        label: '–û–ø–∏—Å–∞–Ω–∏–µ',
        type: 'text',
        placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
        defaultValue: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
      },
      {
        field: 'borderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 8
      }
    ]
  },

  button: {
    title: '–ö–Ω–æ–ø–∫–∞',
    icon: 'üîò',
    description: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞',
    render: {
      kind: 'html',
      template: (props) => `
        <div class="button-block" style="text-align: center; margin: 20px 0;">
          <button 
            class="custom-button"
            style="
              background-color: ${props.backgroundColor};
              color: ${props.color};
              border-radius: ${props.borderRadius}px;
              padding: ${props.padding};
              border: none;
              cursor: pointer;
              font-size: 16px;
              font-weight: 500;
              transition: all 0.2s ease;
            "
            onclick="console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞: ${props.text.replace(/'/g, "\\'")}'); this.textContent='–ó–∞–≥—Ä—É–∑–∫–∞...'; setTimeout(() => this.textContent='${props.text.replace(/'/g, "\\'")}', 1000)"
            onmouseover="this.style.transform='scale(1.05)'; this.style.filter='brightness(1.1)'"
            onmouseout="this.style.transform='scale(1)'; this.style.filter='brightness(1)'"
          >
            ${props.text}
          </button>
        </div>
      `
    },
    fields: [
      {
        field: 'text',
        label: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
        type: 'text',
        placeholder: '–ù–∞–∂–º–∏ –º–µ–Ω—è',
        rules: [
          { type: 'required', message: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' },
          { type: 'minLength', value: 1, message: '–¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' }
        ],
        defaultValue: '–ù–∞–∂–º–∏ –º–µ–Ω—è'
      },
      {
        field: 'backgroundColor',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞',
        type: 'color',
        rules: [{ type: 'required', message: '–¶–≤–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '#007bff'
      },
      {
        field: 'color',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞',
        type: 'color',
        rules: [{ type: 'required', message: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
        defaultValue: '#ffffff'
      },
      {
        field: 'borderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 4
      },
      {
        field: 'padding',
        label: '–û—Ç—Å—Ç—É–ø—ã',
        type: 'text',
        placeholder: '8px 16px',
        rules: [{ type: 'required', message: '–û—Ç—Å—Ç—É–ø—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' }],
        defaultValue: '8px 16px'
      }
    ]
  },

  gallerySlider: {
    title: '–°–ª–∞–π–¥–µ—Ä –≥–∞–ª–µ—Ä–µ–∏',
    icon: 'üé†',
    description: '‚úÖ –ù–ê–°–¢–û–Ø–©–ò–ô Swiper –∏–∑ npm! (—Ç–æ–ª—å–∫–æ —Å Vite —Å–±–æ—Ä–∫–æ–π)',
    render: {
      kind: 'custom',
      // –§—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å –∏–º–ø–µ—Ä–∞—Ç–∏–≤–Ω—ã–º Swiper
      mount: (container, props) => {
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
        const sliderId = `swiper-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`
        
        // ‚úÖ –ù–û–í–´–ô –ø–æ–¥—Ö–æ–¥: –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—Å—Å–∏–≤ slides –∏–∑ props
        const slides = (props.slides || []).filter(slide => slide.url && slide.title)

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        const autoplayValue = typeof props.autoplay === 'string' 
          ? (props.autoplay === 'on' || props.autoplay === 'true') 
          : props.autoplay
        const autoplayDelay = typeof props.autoplayDelay === 'string' 
          ? parseInt(props.autoplayDelay, 10) 
          : props.autoplayDelay
        const loopValue = typeof props.loop === 'string' 
          ? (props.loop === 'on' || props.loop === 'true') 
          : props.loop
        const spaceBetween = typeof props.spaceBetween === 'string' 
          ? parseInt(props.spaceBetween, 10) 
          : props.spaceBetween

        // –°–æ–∑–¥–∞–µ–º HTML
        container.innerHTML = `
          <div class="gallery-slider-block" style="padding: 20px; background: #f8f9fa; border-radius: 8px;">
            ${props.title ? `<h2 style="text-align: center; margin-bottom: 30px; font-size: 28px; font-weight: 700; color: #333;">${props.title}</h2>` : ''}
            
            <div class="swiper" id="${sliderId}" style="width: 100%; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 12px rgba(0,0,0,0.1);">
              <div class="swiper-wrapper">
                ${slides.map(slide => `
                  <div class="swiper-slide">
                    <div style="position: relative; background: white;">
                      <img src="${slide.url}" alt="${slide.title}" style="width: 100%; height: 400px; object-fit: cover; display: block;" />
                      <div style="position: absolute; bottom: 0; left: 0; right: 0; background: linear-gradient(to top, rgba(0,0,0,0.8), transparent); padding: 30px 20px 20px; color: white;">
                        <h3 style="margin: 0 0 8px 0; font-size: 20px; font-weight: 600;">${slide.title}</h3>
                        <p style="margin: 0; font-size: 14px; opacity: 0.9;">${slide.description}</p>
                      </div>
                    </div>
                  </div>
                `).join('')}
              </div>
              
              <div class="swiper-button-next"></div>
              <div class="swiper-button-prev"></div>
              <div class="swiper-pagination"></div>
            </div>
          </div>
        `

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Swiper –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
        setTimeout(() => {
          const swiperEl = container.querySelector(`#${sliderId}`)
          if (swiperEl) {
            new Swiper(swiperEl, {
              modules: [Navigation, Pagination, Autoplay],
              slidesPerView: 2,
              spaceBetween: spaceBetween,
              loop: loopValue,
              autoplay: autoplayValue ? {
                delay: autoplayDelay,
                disableOnInteraction: false
              } : false,
              pagination: {
                el: '.swiper-pagination',
                clickable: true,
                dynamicBullets: true
              },
              navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev'
              },
              grabCursor: true
            })
          }
        }, 0)
      }
    },
    fields: [
      {
        field: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥–∞–ª–µ—Ä–µ–∏',
        type: 'text',
        placeholder: '–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π',
        defaultValue: '–ì–∞–ª–µ—Ä–µ—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π'
      },
      // ‚úÖ –ù–û–í–´–ô –ø–æ–¥—Ö–æ–¥: –º–∞—Å—Å–∏–≤ —Å–ª–∞–π–¥–æ–≤ —á–µ—Ä–µ–∑ repeater
      {
        field: 'slides',
        label: '–°–ª–∞–π–¥—ã',
        type: 'repeater',
        rules: [
          { type: 'required', message: '–ù–µ–æ–±—Ö–æ–¥–∏–º —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ª–∞–π–¥' }
        ],
        defaultValue: [
          {
            url: '/qw.jpg',
            title: '–ü—Ä–∏—Ä–æ–¥–∞',
            description: '–ö—Ä–∞—Å–∏–≤—ã–π –ø–µ–π–∑–∞–∂ –ø—Ä–∏—Ä–æ–¥—ã'
          },
          {
            url: '/Edvard_Grieg.jpg',
            title: '–≠–¥–≤–∞—Ä–¥ –ì—Ä–∏–≥',
            description: '–ó–Ω–∞–º–µ–Ω–∏—Ç—ã–π –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π –∫–æ–º–ø–æ–∑–∏—Ç–æ—Ä'
          },
          {
            url: '/bear.jpg',
            title: '–ú–µ–¥–≤–µ–¥—å',
            description: '–î–∏–∫–∞—è –ø—Ä–∏—Ä–æ–¥–∞'
          },
          {
            url: '/spanch.jpg',
            title: '–ì—É–±–∫–∞ –ë–æ–±',
            description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂'
          }
        ],
        repeaterConfig: {
          itemTitle: '–°–ª–∞–π–¥',
          addButtonText: '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–∞–π–¥',
          removeButtonText: '–£–¥–∞–ª–∏—Ç—å',
          min: 3, // ‚úÖ –†–ê–ë–û–¢–ê–ï–¢! —Ç.–∫. –µ—Å—Ç—å required –≤ rules (–º–∏–Ω–∏–º—É–º 3 —Å–ª–∞–π–¥–∞)
          max: 20,
          collapsible: true,
          fields: [
            {
              field: 'url',
              label: 'URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
              type: 'text',
              placeholder: '/–ø—É—Ç—å/–∫/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.jpg',
              rules: [{ type: 'required', message: 'URL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'title',
              label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
              type: 'text',
              placeholder: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∞–π–¥–∞',
              rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'description',
              label: '–û–ø–∏—Å–∞–Ω–∏–µ',
              type: 'textarea',
              placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∞–π–¥–∞',
              rules: [],
              defaultValue: ''
            }
          ]
        }
      },
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª–∞–π–¥–µ—Ä–∞
      {
        field: 'autoplay',
        label: '–ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞',
        type: 'checkbox',
        defaultValue: true
      },
      {
        field: 'autoplayDelay',
        label: '–ó–∞–¥–µ—Ä–∂–∫–∞ (–º—Å)',
        type: 'number',
        rules: [
          { type: 'min', value: 1000, message: '–ú–∏–Ω–∏–º—É–º: 1000–º—Å' },
          { type: 'max', value: 10000, message: '–ú–∞–∫—Å–∏–º—É–º: 10000–º—Å' }
        ],
        defaultValue: 3000
      },
      {
        field: 'loop',
        label: '–ó–∞—Ü–∏–∫–ª–∏—Ç—å',
        type: 'checkbox',
        defaultValue: true
      },
      {
        field: 'spaceBetween',
        label: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Å–ª–∞–π–¥–∞–º–∏',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 100, message: '–ú–∞–∫—Å–∏–º—É–º: 100' }
        ],
        defaultValue: 30
      }
    ]
  },

  cardList: {
    title: '–°–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫',
    icon: 'üÉè',
    description: '–°–µ—Ç–∫–∞ –∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏',
    render: {
      kind: 'custom',
      mount: (container, props) => {
        const cards = (props.cards || []).filter(card => card.title && card.text);
        
        container.innerHTML = `
          <div class="card-list-block" style="padding: 40px 20px; background: #f8f9fa;">
            ${props.title ? `<h2 style="text-align: center; margin-bottom: 40px; font-size: 32px; font-weight: 700; color: #333;">${props.title}</h2>` : ''}
            
            <div class="cards-grid" style="
              display: grid;
              grid-template-columns: repeat(${props.columns || 3}, 1fr);
              gap: ${props.gap || 16}px;
              max-width: 1200px;
              margin: 0 auto;
            ">
              ${cards.map(card => `
                <div class="card" style="
                  background: ${props.cardBackground || '#ffffff'};
                  border-radius: ${props.cardBorderRadius || 8}px;
                  overflow: hidden;
                  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                  transition: all 0.3s ease;
                  cursor: pointer;
                  display: flex;
                  flex-direction: column;
                ">
                  ${card.image ? `
                    <div style="
                      width: 100%;
                      height: 200px;
                      overflow: hidden;
                      background: #e9ecef;
                    ">
                      <img 
                        src="${card.image}" 
                        alt="${card.title}"
                        style="width: 100%; height: 100%; object-fit: cover; display: block;"
                      />
                    </div>
                  ` : ''}
                  
                  <div style="padding: 24px; flex: 1; display: flex; flex-direction: column;">
                    <h3 style="
                      margin: 0 0 12px 0;
                      font-size: 20px;
                      font-weight: 600;
                      color: ${props.cardTextColor || '#333333'};
                    ">${card.title}</h3>
                    
                    <p style="
                      margin: 0 0 20px 0;
                      font-size: 14px;
                      line-height: 1.6;
                      color: ${props.cardTextColor || '#333333'};
                      opacity: 0.8;
                      flex: 1;
                    ">${card.text}</p>
                    
                    ${card.button && card.link ? `
                      <a 
                        href="${card.link}" 
                        style="
                          display: inline-block;
                          padding: 10px 20px;
                          background: #007bff;
                          color: white;
                          text-decoration: none;
                          border-radius: 4px;
                          font-size: 14px;
                          font-weight: 500;
                          transition: background 0.2s ease;
                          text-align: center;
                        "
                        onmouseover="this.style.background='#0056b3'"
                        onmouseout="this.style.background='#007bff'"
                      >${card.button}</a>
                    ` : ''}
                  </div>
                </div>
              `).join('')}
            </div>
          </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º hover —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        const cardElements = container.querySelectorAll('.card');
        cardElements.forEach(card => {
          card.addEventListener('mouseenter', () => {
            card.style.transform = 'translateY(-5px)';
            card.style.boxShadow = '0 8px 20px rgba(0,0,0,0.15)';
          });
          card.addEventListener('mouseleave', () => {
            card.style.transform = 'translateY(0)';
            card.style.boxShadow = '0 4px 12px rgba(0,0,0,0.1)';
          });
        });
      }
    },
    fields: [
      {
        field: 'title',
        label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏',
        type: 'text',
        placeholder: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
        rules: [],
        defaultValue: '–ù–∞—à–∏ —É—Å–ª—É–≥–∏'
      },
      // ‚úÖ –ú–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–æ—á–µ–∫ —á–µ—Ä–µ–∑ repeater
      {
        field: 'cards',
        label: '–ö–∞—Ä—Ç–æ—á–∫–∏',
        type: 'repeater',
        defaultValue: [
          {
            title: '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
            text: '–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
            button: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
            link: 'https://example.com',
            image: '/2.jpg'
          },
          {
            title: '–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            text: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è iOS –∏ Android',
            button: '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
            link: 'https://example.com',
            image: '/spanch.jpg'
          },
          {
            title: '–î–∏–∑–∞–π–Ω',
            text: '–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ –¥–ª—è –≤–∞—à–µ–≥–æ –±—Ä–µ–Ω–¥–∞',
            button: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã',
            link: 'https://example.com',
            image: '/bear.jpg'
          }
        ],
        repeaterConfig: {
          itemTitle: '–ö–∞—Ä—Ç–æ—á–∫–∞',
          addButtonText: '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É',
          removeButtonText: '–£–¥–∞–ª–∏—Ç—å',
          min: 1, // ‚ö†Ô∏è –ò–ì–ù–û–†–ò–†–£–ï–¢–°–Ø! —Ç.–∫. –Ω–µ—Ç required –≤ rules (–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ)
          max: 12,
          collapsible: true,
          fields: [
            {
              field: 'title',
              label: '–ó–∞–≥–æ–ª–æ–≤–æ–∫',
              type: 'text',
              placeholder: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏',
              rules: [{ type: 'required', message: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }],
              defaultValue: ''
            },
            {
              field: 'text',
              label: '–û–ø–∏—Å–∞–Ω–∏–µ',
              type: 'textarea',
              placeholder: '–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏',
              rules: [{ type: 'required', message: '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }],
              defaultValue: ''
            },
            {
              field: 'image',
              label: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL)',
              type: 'text',
              placeholder: '/–ø—É—Ç—å/–∫/–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é.jpg',
              rules: [],
              defaultValue: '/2.jpg'
            },
            {
              field: 'button',
              label: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
              type: 'text',
              placeholder: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
              rules: [],
              defaultValue: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'
            },
            {
              field: 'link',
              label: '–°—Å—ã–ª–∫–∞',
              type: 'text',
              placeholder: 'https://example.com',
              rules: [],
              defaultValue: 'https://example.com'
            }
          ]
        }
      },
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
      {
        field: 'cardBackground',
        label: '–¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'color',
        rules: [],
        defaultValue: '#ffffff'
      },
      {
        field: 'cardTextColor',
        label: '–¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'color',
        rules: [],
        defaultValue: '#333333'
      },
      {
        field: 'cardBorderRadius',
        label: '–°–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 8
      },
      {
        field: 'columns',
        label: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫',
        type: 'select',
        options: [
          { value: 1, label: '1 –∫–æ–ª–æ–Ω–∫–∞' },
          { value: 2, label: '2 –∫–æ–ª–æ–Ω–∫–∏' },
          { value: 3, label: '3 –∫–æ–ª–æ–Ω–∫–∏' },
          { value: 4, label: '4 –∫–æ–ª–æ–Ω–∫–∏' }
        ],
        rules: [],
        defaultValue: 3
      },
      {
        field: 'gap',
        label: '–û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏',
        type: 'number',
        rules: [
          { type: 'min', value: 0, message: '–ú–∏–Ω–∏–º—É–º: 0' },
          { type: 'max', value: 50, message: '–ú–∞–∫—Å–∏–º—É–º: 50' }
        ],
        defaultValue: 16
      }
    ]
  }
}

