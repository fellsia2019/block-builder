---
alwaysApply: true
---
1. Это приложение должно быть npm пакетом, в текущей версии только для проектов с чистым js (webpack, vite etc) без фреймворков и с фреймворком vue3. 
2. Приложение должно быть по чистой архитектуре. И следовать следующим пунктам чистой архитектуры - 
    1) Слои
        -- Ядро (`core`)  
            -- Сущности (`entities`) — бизнес-правила.  
            -- Use Cases — сценарии.  
            -- Интерфейсы (Ports) — контракты для внешнего мира. 
        -- Инфраструктура  
            -- Реализует интерфейсы ядра
        -- UI (Vue/JS)
            -- Только вызывает Use Cases и получает DTO.  
    2) Зависимости  
        - Разрешено:  
            - Use Case → Сущность  
            - Use Case → Интерфейс  
            - UI → Use Case  
            - Инфраструктура → Интерфейс  
        - Запрещено:  
            - UI → Репозиторий/API  
            - Сущность → Use Case  
            - Ядро → Инфраструктура
    3) Главные правила  
        -- Use Cases — единственный вход в ядро (UI общается только с ними).  
        -- DTO для передачи данных (без логики).  
        -- Интерфейсы (Ports) скрывают реализацию (API, БД). 

3. Соблюдаем привила чистого кода, ооп, solid, функции должно быть чистыми. избегаем антипаттернов.

4. Для локальной разработки должна быть возможность тестировать функционал без публикации в npm. Примеры использования в /examples.
В examples только импортируем сам пакет BlockBuilder и используем его функционал, тут же в examples примеры пользовательских блоков, которые через конфиг передаются в создании инстанса BlockBuilder. BlockBuilder не знает о том какие блоки приходят от пользователя!
BlockBuilder предоставляем ui форм создания и редактирования блоков пользователя, но если пользователь хочет использовать свой ui предоставляем api для этого, примеры для этого делаем тут src\examples\api-usage
